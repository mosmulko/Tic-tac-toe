{"version":3,"sources":["features/Button.jsx","features/Home/Home.jsx","app/reducers/statusSlice.js","app/reducers/playersSlice.js","features/GameLayout/Label.jsx","features/GameLayout/Form.jsx","algorithms.js","app/reducers/scoresSlice.js","features/GameLayout/Game/Timer.jsx","features/GameLayout/Game/Field.jsx","features/GameLayout/Game/Board.jsx","features/GameLayout/Game/Game.jsx","features/GameLayout/Winner.jsx","features/GameLayout/GameLayout.jsx","features/Leaderboard/Leaderboard.jsx","App.jsx","app/store.js","index.jsx"],"names":["Button","click","message","className","type","onClick","Home","id","href","statusSlice","createSlice","name","initialState","reducers","statusChanged","state","action","payload","actions","selectStatus","status","x","moves","seconds","o","playersSlice","newGameStarted","namesChosen","playerTurnEnded","player","selectCurrentPlayer","players","selectNames","Label","Form","submit","names","useSelector","playerXName","playerOName","useState","xName","setXName","oName","setOName","handleInputChange","event","target","value","onSubmit","e","preventDefault","placeholder","onChange","range","min","max","Array","from","length","_","i","checkIfPlayerWon","arr","fieldMap","Map","indexOf","set","has","compareScores","a","b","scoresSlice","lastWinner","leaderboard","scoreAdded","winner","push","sort","findIndex","score","key","place","selectScores","scores","selectWinner","Timer","reset","useEffect","timerId","setTimeout","clearTimeout","Field","num","classes","Board","nextTurn","win","draw","fill","statuses","setStatuses","map","newStatuses","markField","Game","dispatch","useDispatch","secondsElapsed","setsecondsElapsed","secondsGained","finishPlayerTurn","Winner","GameLayout","chosenNames","startNewGame","newStatus","new","playing","won","handleButtonRender","Leaderboard","App","changeNavDisplay","elements","document","getElementsByClassName","classList","toggle","to","path","configureStore","reducer","statusReducer","playersReducer","scoresReducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"sRAMeA,MAJf,YAAoD,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,UAAWC,EAAO,EAAPA,KAC1C,OAAO,wBAAQD,UAAWA,EAAWC,KAAMA,EAAMC,QAASJ,EAAnD,SAA2DC,KCgBrDI,MAhBf,WACE,OACE,sBAAKC,GAAG,eAAeJ,UAAU,qBAAjC,UACE,sEACA,uCACA,+BACE,mGACA,gDACA,6EACA,8CAEF,mBAAGK,KAAK,QAAR,SAAgB,cAAC,EAAD,CAASN,QAAQ,iBAAiBC,UAAU,e,gBCVrDM,EAAcC,YAAY,CACrCC,KAAM,SACNC,aAJmB,MAKnBC,SAAU,CACRC,cAAe,SAACC,EAAOC,GAAR,OAA4BA,EAAOC,YAIvCH,EAAkBL,EAAYS,QAA9BJ,cAEFK,EAAe,SAACJ,GAAD,OAAWA,EAAMK,QAE9BX,IAAf,QCdMG,EAAe,CACnBS,EAAG,CACDd,GAAI,IACJI,KAAM,GACNW,MAAO,EACPC,QAAS,GAEXC,EAAG,CACDjB,GAAI,IACJI,KAAM,GACNW,MAAO,EACPC,QAAS,IAIAE,EAAef,YAAY,CACtCC,KAAM,UACNC,eACAC,SAAU,CACRa,eAAgB,SAACX,GAEf,OADQH,GAGVe,YAAa,SAACZ,EAAOC,GAKnB,OAJIA,EAAOC,UACTF,EAAMM,EAAEV,KAAOK,EAAOC,QAAQI,EAC9BN,EAAMS,EAAEb,KAAOK,EAAOC,QAAQO,GAEzBT,GAETa,gBAAiB,SAACb,EAAOC,GAAY,IAAD,EACVA,EAAOC,QAAvBV,EAD0B,EAC1BA,GAAIgB,EADsB,EACtBA,QACNM,EAASd,EAAMR,GAGrB,OAFAsB,EAAOP,OAAS,EAChBO,EAAON,SAAWA,EACXR,M,EASTU,EAAaP,QAHfQ,E,EAAAA,eACAC,E,EAAAA,YACAC,E,EAAAA,gBAGWE,EAAsB,SAACf,GAAW,IAAD,EAC3BA,EAAMgB,QAAfV,EADoC,EACpCA,EAAGG,EADiC,EACjCA,EACX,OAAIH,EAAEC,QAAUE,EAAEF,MAAcD,EACzBG,GAGIQ,EAAc,SAACjB,GAAD,MAAW,CACpCA,EAAMgB,QAAQV,EAAEV,KAChBI,EAAMgB,QAAQP,EAAEb,OAGHc,IAAf,Q,MCrDeQ,MAJf,YAAwB,IAAP1B,EAAM,EAANA,GACf,OAAO,qBAAKJ,UAAW,SAAWI,KCuDrB2B,MAnDf,YAA2B,IAAXC,EAAU,EAAVA,OACRC,EAAQC,YAAYL,GADF,cAEWI,EAFX,GAEjBE,EAFiB,KAEJC,EAFI,OAIEC,mBAASF,GAJX,mBAIjBG,EAJiB,KAIVC,EAJU,OAKEF,mBAASD,GALX,mBAKjBI,EALiB,KAKVC,EALU,KAOlBC,EAAoB,SAACC,GACzB,IAAMC,EAASD,EAAMC,OACfC,EAAQF,EAAMC,OAAOC,MAEX,MAAhBD,EAAOpC,KAAe+B,EAASM,GAASJ,EAASI,IAUnD,OACE,sBAAKzC,GAAG,eAAR,UACE,oBAAIJ,UAAU,QAAd,iCACA,uBAAMA,UAAU,cAAc8C,SAAU,SAACC,GAAD,OAAoBA,EATxDC,iBACNhB,EAAO,MAAO,CAACM,EAAOE,IACtBD,EAASJ,QACTM,EAASL,IAMP,UACE,sBAAKpC,UAAU,aAAf,UACE,cAAC,EAAD,CAAOI,GAAI,MACX,uBACEI,KAAK,IACLP,KAAK,OACLgD,YAAa,gBACbJ,MAAOP,EACPY,SAAUR,OAGd,sBAAK1C,UAAU,aAAf,UACE,cAAC,EAAD,CAAOI,GAAI,MACX,uBACEI,KAAK,IACLP,KAAK,OACLgD,YAAa,gBACbJ,MAAOL,EACPU,SAAUR,OAGd,cAAC,EAAD,CAAS3C,QAAQ,QAAQC,UAAU,OAAOC,KAAK,kBCPxCkD,EA5CN,SAACC,EAAKC,GAAN,OAAcC,MAAMC,KAAK,CAAEC,OAAQH,EAAMD,EAAM,IAAK,SAACK,EAAGC,GAAJ,OAAUN,EAAMM,MA4CvDC,EA3CF,SAACC,EAAKlC,GACtB,GAAmB,IAAfkC,EAAIJ,OAAc,OAAO,EAK7B,IAHA,IAAMK,EAAW,IAAIC,IACjBJ,EAAIE,EAAIG,QAAQrC,IAEN,IAAPgC,GACLG,EAASG,IAAIN,EAAI,GAAG,GACpBA,EAAIE,EAAIG,QAAQrC,EAAQgC,EAAI,GAG9B,SACGG,EAASI,IAAI,IAAMJ,EAASI,IAAI,IAAMJ,EAASI,IAAI,IACnDJ,EAASI,IAAI,IAAMJ,EAASI,IAAI,IAAMJ,EAASI,IAAI,IACnDJ,EAASI,IAAI,IAAMJ,EAASI,IAAI,IAAMJ,EAASI,IAAI,IACnDJ,EAASI,IAAI,IAAMJ,EAASI,IAAI,IAAMJ,EAASI,IAAI,IACnDJ,EAASI,IAAI,IAAMJ,EAASI,IAAI,IAAMJ,EAASI,IAAI,IACnDJ,EAASI,IAAI,IAAMJ,EAASI,IAAI,IAAMJ,EAASI,IAAI,IACnDJ,EAASI,IAAI,IAAMJ,EAASI,IAAI,IAAMJ,EAASI,IAAI,IACnDJ,EAASI,IAAI,IAAMJ,EAASI,IAAI,IAAMJ,EAASI,IAAI,KAwBlBC,EAnBvB,SAACC,EAAGC,GACjB,GAAID,EAAE/C,QAAUgD,EAAEhD,QAChB,OAAQ,EAEV,GAAI+C,EAAE/C,QAAUgD,EAAEhD,QAChB,OAAO,EAET,GAAI+C,EAAE/C,UAAYgD,EAAEhD,QAAS,CAC3B,GAAI+C,EAAEhD,MAAQiD,EAAEjD,MACd,OAAQ,EAEV,GAAIgD,EAAEhD,MAAQiD,EAAEjD,MACd,OAAO,EAGX,OAAO,GCjCEkD,EAAc9D,YAAY,CACrCC,KAAM,SACNC,aAPmB,CACnB6D,WAAY,KACZC,YAAa,IAMb7D,SAAU,CACR8D,WAAY,SAAC5D,EAAOC,GAClB,IAAM4D,EAAS5D,EAAOC,QACtBF,EAAM2D,YAAYG,KAAKD,GACvB7D,EAAM2D,YAAYI,KAAKT,GACvB,IAAMR,EAAI9C,EAAM2D,YAAYK,WAAU,SAACC,GACrC,IAAK,IAAIC,KAAOD,EACd,GAAIA,EAAMC,KAASL,EAAOK,GAAM,OAAO,EAEzC,OAAO,KAIT,OAFAL,EAAOM,MAAQrB,EAAI,EACnB9C,EAAM0D,WAAaG,EACZ7D,MAKE4D,EAAeH,EAAYtD,QAA3ByD,WAEFQ,EAAe,SAACpE,GAAD,OAAWA,EAAMqE,OAAOV,aAEvCW,EAAe,SAACtE,GAAD,OAAWA,EAAMqE,OAAOX,YAErCD,IAAf,Q,MCjBec,MAff,YAAuC,IAAvBnB,EAAsB,EAAtBA,IAAKoB,EAAiB,EAAjBA,MAAOhE,EAAU,EAAVA,QAU1B,OATAiE,qBAAU,WACR,GAAIjE,EAAU,EAAG,CACf,IAAMkE,EAAUC,YAAY,WAC5BvB,MACI,KACJ,OAAO,kBAAMwB,aAAaF,IAE5BF,MACC,CAACpB,EAAKoB,EAAOhE,IAEd,qBAAKhB,GAAG,QAAR,SAAiBgB,K,QCFNqE,MATf,YAAuC,IAAtB3F,EAAqB,EAArBA,MAAOmB,EAAc,EAAdA,OAAQyE,EAAM,EAANA,IACxBC,EAAO,kBAAcD,GAC3B,OACE,qBAAKxF,QAASJ,EAAOE,UAAW2F,EAAhC,SACE,cAAC,EAAD,CAAOvF,GAAIa,OCqBF2E,MAxBf,YAA+C,IAA/BlE,EAA8B,EAA9BA,OAAQmE,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,IAAKC,EAAO,EAAPA,KAAO,EACZ1D,mBAASiB,MAAM,GAAG0C,KAAK,KADX,mBACrCC,EADqC,KAC3BC,EAD2B,KAkB5C,OAAO,qBAAK9F,GAAG,QAAR,SACJ+C,EAAM,EAAG,GAAGgD,KAAI,SAAAT,GAAG,OACjB,cAAC,EAAD,CAAiB5F,MAAO,kBAjBX,SAAC4F,EAAKhE,GACtB,IAAMgC,EAAIgC,EAAM,EAChB,GAAoB,KAAhBO,EAASvC,GAAb,CACA,IAAM0C,EAAW,YAAOH,GAExB,GADAG,EAAY1C,GAAKhC,EACbiC,EAAiByC,EAAa1E,GAChC,OAAOoE,IAET,IAAiC,IAA7BM,EAAYrC,QAAQ,IACtB,OAAOgC,IAETG,EAAYE,GACZP,KAKiCQ,CAAUX,EAAKhE,IAC7CgE,IAAKA,EAAKzE,OAAQgF,EAASP,EAAM,IADrBA,SCwCJY,MAnDf,WACE,IAAM5E,EAASQ,YAAYP,GACrB4E,EAAWC,cAFF,EAI6BnE,mBADvB,IAHN,mBAIRoE,EAJQ,KAIQC,EAJR,KAKTC,EAFe,GAEgBF,EAE/BG,EAAmB,WACvBL,EAAS9E,EAAgB,CAACrB,GAAIsB,EAAOtB,GAAIgB,QAASuF,KAClDD,EANmB,KA2BrB,OAAO,sBAAKtG,GAAG,eAAR,UAEDsB,EAAOlB,KAAO,6BAAKkB,EAAOlB,OAAa,KAE3C,qBAAKJ,GAAG,aAAR,SACE,cAAC,EAAD,CAAOA,GAAIsB,EAAOtB,OAEpB,cAAC,EAAD,CACE4D,IAZmB,WACrB0C,EAAkBD,EAAiB,IAYjCrB,MAAOwB,EACPxF,QAASqF,IAEX,cAAC,EAAD,CACE/E,OAAQA,EAAOtB,GACfyF,SAAUe,EACVd,IAjCmB,WACrB,IAAMhF,EAAU,CACdN,KAAMkB,EAAOlB,KACbY,QAASuF,EAAgBjF,EAAON,QAChCD,MAAOO,EAAOP,MAAQ,GAExBoF,EAAS/B,EAAW1D,IACpByF,EAAS5F,EAAc,SA2BrBoF,KAxBiB,WACnBQ,EAAS5F,EAAc,gBChBZkG,MAhBf,WACE,IAAMpC,EAASvC,YAAYgD,GAC3B,OAAO,sBAAK9E,GAAG,cAAcJ,UAAU,qBAAhC,UACH,oBAAIA,UAAU,QAAd,qBACA,6BAAKyE,EAAOjE,OACZ,sBAAKJ,GAAG,gBAAR,UACA,6CACA,+BACE,yCAAYqE,EAAOM,SACnB,2CAAcN,EAAOrD,QAArB,OACA,yCAAYqD,EAAOtD,mBCkCZ2F,MAlCf,WACE,IAAM7F,EAASiB,YAAYlB,GACrB+F,EAAc7E,YAAYL,GAC1B0E,EAAWC,cAEXQ,EAAe,SAAC/F,EAAQgB,GAC5B,IAAIgF,EAAuB,YAAXhG,EAAuB,MAAQ,UADT,cAEzBgB,EAFyB,GAEjCf,EAFiC,KAE9BG,EAF8B,KAGtCkF,EAAShF,KACTgF,EAAS/E,EAAY,CAAEN,EAAGA,EAAGG,EAAGA,KAChCkF,EAAS5F,EAAcsG,KASzB,OACE,gCAEI,CACEC,IAAK,cAAC,EAAD,CAAMlF,OAAQgF,IACnBG,QAAS,cAAC,EAAD,IACTC,IAAK,cAAC,EAAD,IACLrB,KAAM,oBAAI3F,GAAG,OAAOJ,UAAU,QAAxB,0BACNiB,GAdmB,SAACA,EAAQgB,GAClC,GAAe,QAAXhB,EAAJ,CACA,IAAIlB,EAAqB,YAAXkB,EAAuB,QAAU,QAC/C,OAAO,cAAC,EAAD,CAAQnB,MAAO,kBAAMkH,EAAa/F,EAAQgB,IAAQlC,QAASA,EAASC,UAAU,UAalFqH,CAAmBpG,EAAQ8F,O,MCTnBO,MA7Bf,WACE,IAAMrC,EAAS/C,YAAY8C,GAC3B,OACE,gCACE,oBAAIhF,UAAU,QAAd,yBACC,kCACA,gCACG,+BACE,uCACA,sCACA,yCACA,4CAGJ,gCACGiF,EAAOkB,KAAI,SAACzE,EAAQgC,GAAT,OACV,+BACA,6BAAKA,EAAI,IACT,6BAAKhC,EAAOlB,OACZ,6BAAKkB,EAAON,UACZ,6BAAKM,EAAOP,UAJHuC,eCgCN6D,MA9Cf,WACE,IAAMC,EAAmB,WAEvB,IADA,IAAMC,EAAWC,SAASC,uBAAuB,QACxCjE,EAAI,EAAGA,EAAI+D,EAASjE,OAAQE,IACnC+D,EAAS/D,GAAGkE,UAAUC,OAAO,WAIjC,OACE,cAAC,IAAD,UACE,sBAAK7H,UAAU,UAAf,UACE,wBAAQA,UAAU,cAAlB,SAAgC,qBAAKI,GAAG,QAAR,2BAChC,qBAAKA,GAAG,SAASF,QAASsH,EAA1B,SACE,2BAEF,qBAAKxH,UAAU,0BAAf,SACE,qBAAIA,UAAU,cAAd,UACE,oBAAIE,QAASsH,EAAb,SACE,cAAC,IAAD,CAAMM,GAAG,QAAT,oBAEF,oBAAI5H,QAASsH,EAAb,SACE,cAAC,IAAD,CAAMM,GAAG,eAAT,gCAKN,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,WAKN,wBAAQ/H,UAAU,OAAlB,SAAyB,2DC1ClBgI,cAAe,CAC5BC,QAAS,CACPhH,OAAQiH,EACRtG,QAASuG,EACTlD,OAAQmD,KCFZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJd,SAASe,eAAe,W","file":"static/js/main.e1752402.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Button({click, message, className, type}) {\r\n  return <button className={className} type={type} onClick={click}>{message}</button>;\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\nimport Button from '../Button';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div id='home-wrapper' className='flex center column'>\r\n      <h1>Welcome to Tic Tac Toe game for two!</h1>\r\n      <h3>Rules</h3>\r\n      <ol>\r\n        <li>Choose your names to see your greatest victory on the Leaderboard</li>\r\n        <li>X always start</li>\r\n        <li>Each player has 30 seconds to make his move</li>\r\n        <li>Have fun!</li>\r\n      </ol>\r\n      <a href='/game'><Button  message='Create Players' className='game'/></a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = \"new\";\r\n\r\nexport const statusSlice = createSlice({\r\n  name: \"status\",\r\n  initialState,\r\n  reducers: {\r\n    statusChanged: (state, action) => (state = action.payload),\r\n  },\r\n});\r\n\r\nexport const { statusChanged } = statusSlice.actions;\r\n\r\nexport const selectStatus = (state) => state.status;\r\n\r\nexport default statusSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  x: {\r\n    id: \"x\",\r\n    name: \"\",\r\n    moves: 0,\r\n    seconds: 0,\r\n  },\r\n  o: {\r\n    id: \"o\",\r\n    name: \"\",\r\n    moves: 0,\r\n    seconds: 0,\r\n  },\r\n};\r\n\r\nexport const playersSlice = createSlice({\r\n  name: \"players\",\r\n  initialState,\r\n  reducers: {\r\n    newGameStarted: (state) => {\r\n      state = initialState;\r\n      return state;\r\n    },\r\n    namesChosen: (state, action) => {\r\n      if (action.payload) {\r\n        state.x.name = action.payload.x;\r\n        state.o.name = action.payload.o;\r\n      }\r\n      return state;\r\n    },\r\n    playerTurnEnded: (state, action) => {\r\n      const { id, seconds } = action.payload;\r\n      const player = state[id];\r\n      player.moves += 1;\r\n      player.seconds += seconds;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  newGameStarted,\r\n  namesChosen,\r\n  playerTurnEnded,\r\n} = playersSlice.actions;\r\n\r\nexport const selectCurrentPlayer = (state) => {\r\n  const { x, o } = state.players;\r\n  if (x.moves === o.moves) return x;\r\n  return o;\r\n};\r\n\r\nexport const selectNames = (state) => [\r\n  state.players.x.name,\r\n  state.players.o.name,\r\n];\r\n\r\nexport default playersSlice.reducer;\r\n","import React from \"react\";\r\n\r\nfunction Label({ id }) {\r\n  return <div className={'label ' + id}></div>;\r\n}\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectNames } from \"../../app/reducers/playersSlice\";\r\nimport Label from \"./Label\";\r\nimport Button from '../Button';\r\n\r\nfunction Form({ submit }) {\r\n  const names = useSelector(selectNames);\r\n  const [playerXName, playerOName] = names;\r\n\r\n  const [xName, setXName] = useState(playerXName);\r\n  const [oName, setOName] = useState(playerOName);\r\n\r\n  const handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = event.target.value;\r\n\r\n    target.name === \"x\" ? setXName(value) : setOName(value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    submit('new', [xName, oName]);\r\n    setXName(playerXName);\r\n    setOName(playerOName);\r\n  };\r\n\r\n  return (\r\n    <div id='form-wrapper'>\r\n      <h3 className='title'>Choose your players</h3>\r\n      <form className='flex column' onSubmit={(e) => handleSubmit(e)}>\r\n        <div className='input flex'>\r\n          <Label id={\"x\"} />\r\n          <input\r\n            name=\"x\"\r\n            type=\"text\"\r\n            placeholder={'Player X name'}\r\n            value={xName}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className='input flex'>\r\n          <Label id={\"o\"} />\r\n          <input\r\n            name=\"o\"\r\n            type=\"text\"\r\n            placeholder={'Player O name'}\r\n            value={oName}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <Button  message='Start' className='game' type='submit'/>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","const algorithms = {\r\n  range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\r\n  checkIfPlayerWon: (arr, player) => {\r\n    if (arr.length === 0) return false;\r\n\r\n    const fieldMap = new Map();\r\n    let i = arr.indexOf(player);\r\n\r\n    while (i !== -1) {\r\n      fieldMap.set(i + 1, true);\r\n      i = arr.indexOf(player, i + 1);\r\n    }\r\n\r\n    if (\r\n      (fieldMap.has(1) && fieldMap.has(2) && fieldMap.has(3)) ||\r\n      (fieldMap.has(4) && fieldMap.has(5) && fieldMap.has(6)) ||\r\n      (fieldMap.has(7) && fieldMap.has(8) && fieldMap.has(9)) ||\r\n      (fieldMap.has(1) && fieldMap.has(4) && fieldMap.has(7)) ||\r\n      (fieldMap.has(2) && fieldMap.has(5) && fieldMap.has(8)) ||\r\n      (fieldMap.has(3) && fieldMap.has(6) && fieldMap.has(9)) ||\r\n      (fieldMap.has(1) && fieldMap.has(5) && fieldMap.has(9)) ||\r\n      (fieldMap.has(3) && fieldMap.has(5) && fieldMap.has(7))\r\n    )\r\n      return true;\r\n    return false;\r\n  },\r\n  compareScores: (a, b) => {\r\n    if (a.seconds < b.seconds) {\r\n      return -1;\r\n    }\r\n    if (a.seconds > b.seconds) {\r\n      return 1;\r\n    }\r\n    if (a.seconds === b.seconds) {\r\n      if (a.moves < b.moves) {\r\n        return -1;\r\n      }\r\n      if (a.moves > b.moves) {\r\n        return 1;\r\n      }\r\n    }\r\n    return 0;\r\n  },\r\n};\r\n\r\nexport const { range, checkIfPlayerWon, compareScores } = algorithms;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { compareScores } from \"../../algorithms\";\r\n\r\nconst initialState = {\r\n  lastWinner: null,\r\n  leaderboard: [],\r\n};\r\n\r\nexport const scoresSlice = createSlice({\r\n  name: \"scores\",\r\n  initialState,\r\n  reducers: {\r\n    scoreAdded: (state, action) => {\r\n      const winner = action.payload;\r\n      state.leaderboard.push(winner);\r\n      state.leaderboard.sort(compareScores);\r\n      const i = state.leaderboard.findIndex((score) => {\r\n        for (let key in score) {\r\n          if (score[key] !== winner[key]) return false;\r\n        }\r\n        return true;\r\n      });\r\n      winner.place = i + 1;\r\n      state.lastWinner = winner;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { scoreAdded } = scoresSlice.actions;\r\n\r\nexport const selectScores = (state) => state.scores.leaderboard;\r\n\r\nexport const selectWinner = (state) => state.scores.lastWinner;\r\n\r\nexport default scoresSlice.reducer;\r\n","import React, { useEffect} from \"react\";\r\n\r\n\r\nfunction Timer({set, reset, seconds}) {\r\n  useEffect(() => {\r\n    if (seconds > 0) {\r\n      const timerId = setTimeout( () => {\r\n      set();\r\n      } , 1000);\r\n      return () => clearTimeout(timerId);\r\n    } \r\n    reset();\r\n  }, [set, reset, seconds]);\r\n  return (\r\n    <div id='timer'>{seconds}</div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport Label from \"../Label\";\r\n\r\nfunction Field({ click, status, num}) {\r\n  const classes = `field f-${num}`\r\n  return (\r\n    <div onClick={click} className={classes}>\r\n      <Label id={status}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Field;\r\n","import React, {useState} from \"react\";\r\nimport {range, checkIfPlayerWon} from '../../../algorithms';\r\nimport Field from './Field';\r\n\r\nfunction Board({player, nextTurn, win, draw}) {\r\n  const [statuses, setStatuses] = useState(Array(9).fill(''));\r\n\r\n  const markField = (num, player) => {\r\n    const i = num - 1;\r\n    if (statuses[i] !== '') return;\r\n    const newStatuses = [...statuses];\r\n    newStatuses[i] = player;\r\n    if (checkIfPlayerWon(newStatuses, player)) {\r\n      return win();\r\n    }\r\n    if (newStatuses.indexOf('') === -1) {\r\n      return draw();\r\n    }\r\n    setStatuses(newStatuses);\r\n    nextTurn();\r\n  }\r\n\r\n  return <div id='board'>\r\n    {range(1 ,9).map(num =>\r\n       <Field key={num} click={() => markField(num, player)}\r\n       num={num} status={statuses[num - 1]}/>)}\r\n  </div>;\r\n}\r\nexport default Board;","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  playerTurnEnded,\r\n  selectCurrentPlayer,\r\n} from \"../../../app/reducers/playersSlice\";\r\nimport {scoreAdded} from \"../../../app/reducers/scoresSlice\";\r\nimport {statusChanged} from \"../../../app/reducers/statusSlice\";\r\nimport './Game.css';\r\nimport Label from \"../Label\";\r\nimport Timer from \"./Timer\";\r\nimport Board from \"./Board\";\r\n\r\nfunction  Game() {\r\n  const player = useSelector(selectCurrentPlayer);\r\n  const dispatch = useDispatch();\r\n  const initialTimer = 30;\r\n  const [secondsElapsed, setsecondsElapsed] = useState(initialTimer);\r\n  const secondsGained = initialTimer - secondsElapsed;\r\n\r\n  const finishPlayerTurn = () => {\r\n    dispatch(playerTurnEnded({id: player.id, seconds: secondsGained}));\r\n    setsecondsElapsed(initialTimer);\r\n  }\r\n\r\n  const endGameWithWin = () => {\r\n    const payload = { \r\n      name: player.name, \r\n      seconds: secondsGained + player.seconds, \r\n      moves: player.moves + 1 \r\n    }\r\n    dispatch(scoreAdded(payload));\r\n    dispatch(statusChanged('won'));\r\n  }\r\n\r\n  const announceDraw = () => {\r\n    dispatch(statusChanged('draw'))\r\n  }\r\n\r\n  const makeTimerCount = () => {\r\n    setsecondsElapsed(secondsElapsed - 1)\r\n  }\r\n\r\n  return <div id='game-wrapper'>\r\n      {\r\n        player.name ? <h3>{player.name}</h3> : null\r\n      }\r\n    <div id='turn-label'>\r\n      <Label id={player.id}/>\r\n    </div>\r\n    <Timer \r\n      set={makeTimerCount} \r\n      reset={finishPlayerTurn}\r\n      seconds={secondsElapsed}\r\n    />\r\n    <Board \r\n      player={player.id} \r\n      nextTurn={finishPlayerTurn}\r\n      win={endGameWithWin}\r\n      draw={announceDraw}\r\n    />\r\n  </div>;\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectWinner } from \"../../app/reducers/scoresSlice\";\r\n\r\nfunction Winner() {\r\n  const winner = useSelector(selectWinner);\r\n  return <div id='win-wrapper' className='flex center column'>\r\n      <h3 className='title'>You won</h3>\r\n      <h2>{winner.name}</h2>\r\n      <div id='score-wrapper'>\r\n      <h3>Your score:</h3>\r\n      <ul>\r\n        <li>Place: {winner.place}</li>\r\n        <li>Seconds: {winner.seconds}s</li>\r\n        <li>Turns: {winner.moves}</li>\r\n      </ul>\r\n      </div>\r\n  </div>\r\n}\r\n\r\nexport default Winner;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { statusChanged, selectStatus } from \"../../app/reducers/statusSlice\";\r\nimport {\r\n  newGameStarted,\r\n  namesChosen,\r\n  selectNames,\r\n} from \"../../app/reducers/playersSlice\";\r\nimport './GameLayout.css'\r\nimport Form from \"./Form\";\r\nimport Game from \"./Game/Game\";\r\nimport Winner from \"./Winner\";\r\nimport Button from '../Button';\r\n\r\nfunction GameLayout() {\r\n  const status = useSelector(selectStatus);\r\n  const chosenNames = useSelector(selectNames);\r\n  const dispatch = useDispatch();\r\n\r\n  const startNewGame = (status, names) => {\r\n    let newStatus = status === \"playing\" ? \"new\" : \"playing\";\r\n    let [x, o] = names;\r\n    dispatch(newGameStarted());\r\n    dispatch(namesChosen({ x: x, o: o }));\r\n    dispatch(statusChanged(newStatus));\r\n  };\r\n\r\n  const handleButtonRender = (status, names) => {\r\n    if (status === \"new\") return;\r\n    let message = status === \"playing\" ? \"Reset\" : \"Start\";\r\n    return <Button click={() => startNewGame(status, names)} message={message} className='game'/>;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        {\r\n          new: <Form submit={startNewGame} />,\r\n          playing: <Game/>,\r\n          won: <Winner />,\r\n          draw: <h3 id='draw' className='title'>It's a draw</h3>,\r\n        }[status]\r\n      }\r\n      {handleButtonRender(status, chosenNames)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameLayout;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectScores } from \"../../app/reducers/scoresSlice\";\r\nimport './Leaderboard.css';\r\n\r\nfunction Leaderboard() {\r\n  const scores = useSelector(selectScores);\r\n  return (\r\n    <div>\r\n      <h3 className='title'>Leaderboard</h3>\r\n       <table>\r\n       <thead>\r\n          <tr>\r\n            <th>Place</th>\r\n            <th>Name</th>\r\n            <th>Seconds</th>\r\n            <th>Turns</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {scores.map((player, i) => (\r\n            <tr key={i}>\r\n            <td>{i + 1}</td>\r\n            <td>{player.name}</td>\r\n            <td>{player.seconds}</td>\r\n            <td>{player.moves}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leaderboard;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Home from \"./features/Home/Home\";\r\nimport GameLayout from \"./features/GameLayout/GameLayout\";\r\nimport Leaderboard from \"./features/Leaderboard/Leaderboard\";\r\n\r\nfunction App() {\r\n  const changeNavDisplay = () => {\r\n    const elements = document.getElementsByClassName('menu');\r\n    for (let i = 0; i < elements.length; i++) {\r\n      elements[i].classList.toggle('hidden')\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"appGrid\">\r\n        <header className='flex center'><div id='title'>Tic Tac Toe</div></header>\r\n        <div id='burger' onClick={changeNavDisplay}>\r\n          <span></span>\r\n        </div>\r\n        <nav className='menu hidden flex center'>\r\n          <ul className='menu hidden'>\r\n            <li onClick={changeNavDisplay}>\r\n              <Link to=\"/game\">Game</Link> \r\n            </li>\r\n            <li onClick={changeNavDisplay}>\r\n              <Link to=\"/leaderboard\">Leaderboard</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/game\">\r\n              <GameLayout />\r\n            </Route>\r\n            <Route path=\"/leaderboard\">\r\n              <Leaderboard />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n\r\n        <footer className='flex'><div>By Monika Smulko</div></footer>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport statusReducer from \"./reducers/statusSlice\";\r\nimport playersReducer from \"./reducers/playersSlice\";\r\nimport scoresReducer from \"./reducers/scoresSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    status: statusReducer,\r\n    players: playersReducer,\r\n    scores: scoresReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}